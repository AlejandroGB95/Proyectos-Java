/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package instituto_aitor;

import java.awt.Color;
import java.awt.Container;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author aitor
 */
public class Login extends JDialog {

    JDialog ventana;
    private Connection conexion;

    public Login(Frame owner, boolean bln) {
        super(owner, true);
   
        initComponents();
        
        usuario.setName("Usuario");
        
        errorContraseña.setVisible(false);
        errorNombreBD.setVisible(false);
        errorPuerto.setVisible(false);
        errorServidor.setVisible(false);
        errorTipo.setVisible(false);
        errorUsuario.setVisible(false);
        
        BotConecta.setEnabled(false);
        
        // ------------- AÑADIR PROPIEDADES A LOS ELEMENTOS GRÁFICOS -----------
        usuario.putClientProperty("etiqueta", errorUsuario);
        //Asociamos al jtextfield de usuario el label del error de usuario
        usuario.putClientProperty("RegExp", "[A-Za-z0-9]{3,}");
        usuario.putClientProperty("MsgRegExp", "Minimo 3 alfanuméricos");

        contraseña.putClientProperty("etiqueta", errorContraseña);
        contraseña.putClientProperty("RegExp", "[A-Za-z0-9]{3,}");
        contraseña.putClientProperty("MsgRegExp", "Minimo 3 alfanuméricos");

        nombreBD.putClientProperty("etiqueta", errorNombreBD);
        nombreBD.putClientProperty("RegExp", "[A-Za-z0-9]{3,}");
        nombreBD.putClientProperty("MsgRegExp", "Minimo 3 alfanuméricos");
        
        tipoBD.putClientProperty("etiqueta", errorTipo);
        tipoBD.putClientProperty("RegExp", "[A-Za-z0-9]{3,}");
        tipoBD.putClientProperty("MsgRegExp", "Minimo 3 alfanuméricos");
        
        servidorBD.putClientProperty("etiqueta", errorServidor);
        servidorBD.putClientProperty("RegExp", "[A-Za-z0-9]{3,}");
        servidorBD.putClientProperty("MsgRegExp", "Minimo 3 alfanuméricos");
        
        puertoBD.putClientProperty("etiqueta", errorPuerto);
        puertoBD.putClientProperty("RegExp", "[0-9]{4}");
        puertoBD.putClientProperty("MsgRegExp", "Debe tenere 4 números");

        compruebaDatos(this.getContentPane());
        ventana=this;    
        setVisible(true);
        BotConecta.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
        System.out.println("Has hecho click al boton conecta");
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BotConecta = new javax.swing.JButton();
        usuario = new javax.swing.JTextField();
        contraseña = new javax.swing.JTextField();
        nombreBD = new javax.swing.JTextField();
        tipoBD = new javax.swing.JComboBox<>();
        servidorBD = new javax.swing.JTextField();
        puertoBD = new javax.swing.JTextField();
        BotCancelar = new javax.swing.JButton();
        mysqlRadio = new javax.swing.JRadioButton();
        OracleRadio = new javax.swing.JRadioButton();
        errorUsuario = new javax.swing.JLabel();
        errorContraseña = new javax.swing.JLabel();
        errorNombreBD = new javax.swing.JLabel();
        errorTipo = new javax.swing.JLabel();
        errorServidor = new javax.swing.JLabel();
        errorPuerto = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        PeliculaRadioBot = new javax.swing.JRadioButton();

        jTextField3.setText("jTextField1");

        setTitle("Conectarse a la base de datos");
        setFocusTraversalPolicyProvider(true);
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DATOS DE CONEXIÓN...");

        jLabel2.setText("Usuario:");

        jLabel3.setText("Contraseña:");

        jLabel4.setText("Tipo de la base de datos:");

        jLabel5.setText("Servidor de la base de datos:");

        jLabel6.setText("Puerto:");

        jLabel7.setText("Nombre de la base de datos:");

        BotConecta.setBackground(new java.awt.Color(204, 204, 204));
        BotConecta.setForeground(new java.awt.Color(0, 102, 0));
        BotConecta.setText("Conectarse");
        BotConecta.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BotConecta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotConectaActionPerformed(evt);
            }
        });

        usuario.setName(""); // NOI18N
        usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                usuarioKeyReleased(evt);
            }
        });

        contraseña.setName("Contraseña"); // NOI18N
        contraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                contraseñaKeyReleased(evt);
            }
        });

        nombreBD.setName("Nombre de la BD"); // NOI18N
        nombreBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreBDKeyReleased(evt);
            }
        });

        tipoBD.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona Tipo de BD", "MySQL", "Oracle" }));
        tipoBD.setName("Tipo de BD"); // NOI18N
        tipoBD.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tipoBDItemStateChanged(evt);
            }
        });

        servidorBD.setText("localhost");
        servidorBD.setName("Servidor de la BD"); // NOI18N
        servidorBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                servidorBDKeyReleased(evt);
            }
        });

        puertoBD.setForeground(new java.awt.Color(255, 0, 0));
        puertoBD.setName("Puerto"); // NOI18N
        puertoBD.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                puertoBDKeyReleased(evt);
            }
        });

        BotCancelar.setBackground(new java.awt.Color(204, 204, 204));
        BotCancelar.setForeground(new java.awt.Color(204, 0, 0));
        BotCancelar.setText("Cancelar");
        BotCancelar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        BotCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotCancelarActionPerformed(evt);
            }
        });

        buttonGroup1.add(mysqlRadio);
        mysqlRadio.setText("Prog");
        mysqlRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mysqlRadioActionPerformed(evt);
            }
        });

        buttonGroup1.add(OracleRadio);
        OracleRadio.setText("Datos");
        OracleRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OracleRadioActionPerformed(evt);
            }
        });

        errorUsuario.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        errorUsuario.setForeground(new java.awt.Color(204, 0, 0));
        errorUsuario.setText("[ ! ] Campo Obligatorio");
        errorUsuario.setName("errorUsuario"); // NOI18N

        errorContraseña.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        errorContraseña.setForeground(new java.awt.Color(204, 0, 0));
        errorContraseña.setText("[ ! ] Campo Obligatorio");
        errorContraseña.setName("errorContraseña"); // NOI18N

        errorNombreBD.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        errorNombreBD.setForeground(new java.awt.Color(204, 0, 0));
        errorNombreBD.setText("[ ! ] Campo Obligatorio ");
        errorNombreBD.setName("errorNombreBD"); // NOI18N

        errorTipo.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        errorTipo.setForeground(new java.awt.Color(204, 0, 0));
        errorTipo.setText("[ ! ] Campo Obligatorio");
        errorTipo.setName("errorTipoBD"); // NOI18N

        errorServidor.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        errorServidor.setForeground(new java.awt.Color(204, 0, 0));
        errorServidor.setText("[ ! ] Campo Obligatorio");
        errorServidor.setName("errorServidorBD"); // NOI18N

        errorPuerto.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        errorPuerto.setForeground(new java.awt.Color(204, 0, 0));
        errorPuerto.setText("[ ! ] Campo Obligatorio");
        errorPuerto.setName("errorPuertoBD"); // NOI18N

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Usuarios:");

        buttonGroup1.add(PeliculaRadioBot);
        PeliculaRadioBot.setText("Instituto");
        PeliculaRadioBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PeliculaRadioBotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(usuario)
                                    .addComponent(contraseña)
                                    .addComponent(nombreBD, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tipoBD, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(puertoBD, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(servidorBD, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(BotConecta, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(BotCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errorUsuario)
                    .addComponent(errorContraseña)
                    .addComponent(errorNombreBD)
                    .addComponent(errorTipo)
                    .addComponent(errorServidor)
                    .addComponent(errorPuerto)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(OracleRadio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(mysqlRadio, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(PeliculaRadioBot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(31, 31, 31))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorUsuario))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(contraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorContraseña))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(nombreBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorNombreBD))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tipoBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorTipo))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(servidorBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorServidor))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(puertoBD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errorPuerto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mysqlRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(OracleRadio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(BotConecta, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(BotCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PeliculaRadioBot))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    
    private void BotConectaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotConectaActionPerformed
   
       if (compruebaDatos(this.getContentPane())){
         conexion = conectaBD((String)tipoBD.getSelectedItem(), servidorBD.getText(), puertoBD.getText(), nombreBD.getText(), usuario.getText(), contraseña.getText());
        
       if (conexion!=null){
           ventana.setVisible(false);
           JOptionPane.showMessageDialog(this, "Conexión hecha con éxito", "Conexión exitosa", JOptionPane.INFORMATION_MESSAGE);
       } else {
           int opc = JOptionPane.showConfirmDialog(this, "¿Quieres volver a intentarlo?", "Inténtalo otra vez...", JOptionPane.YES_NO_OPTION);
           if (opc==JOptionPane.NO_OPTION){
               JOptionPane.showMessageDialog(this, "Saliendo de la aplicación","Cerrando el programa...",JOptionPane.INFORMATION_MESSAGE);
               System.exit(0);               
           }
       }
       
       }
       
    }//GEN-LAST:event_BotConectaActionPerformed

    private boolean compruebaDatos(Container panel) { 
        boolean error = true;

        for (int i = 0; i < panel.getComponentCount(); i++) {
            JComponent c = (JComponent) panel.getComponent(i);

            if (c instanceof JTextField) {

                JLabel etiqueta = (JLabel) ((JTextField) c).getClientProperty("etiqueta");
                if (((JTextField) c).getText().trim().isEmpty()) {

                    etiqueta.setVisible(true);

                    /*
                    JOptionPane.showMessageDialog(this,
                            ((JTextField) c).getName() + " es obligatorio!",
                            "Datos incorrectos", JOptionPane.ERROR_MESSAGE);
                    ((JTextField) c).requestFocus();
                     */
                    error = false;
                } else {
                    etiqueta.setVisible(false);
                }
                if (c.getName()=="Puerto"){
                    if(!((JTextField) c).getText().matches("[0-9]{4}")){
                        errorPuerto.setVisible(true);
                        error=false;
                    }
                }
            } else if (c instanceof JComboBox) {
                JLabel etiqueta = (JLabel) c.getClientProperty("etiqueta");
                if (((JComboBox) c).getSelectedIndex() == 0) {
                    etiqueta.setVisible(true);
                    error=false;
                } else {
                    etiqueta.setVisible(false);
                }

                /* if (((JComboBox) c).getSelectedIndex()==0) {
                    JOptionPane.showMessageDialog(this,
                            "Debes seleccionar un "+((JComboBox) c).getName() + " válido",
                            "Datos incorrectos", JOptionPane.ERROR_MESSAGE);
                    c.requestFocus();
                   error=false;
                }*/
            }

        }
        return error;
    }
    
    private void BotCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotCancelarActionPerformed
        JOptionPane.showMessageDialog(
                    this, "Cerrando el programa...", 
                    "Cancelando Acceso", JOptionPane.INFORMATION_MESSAGE);
        System.exit(0);
    }//GEN-LAST:event_BotCancelarActionPerformed

    private void mysqlRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mysqlRadioActionPerformed
        nombreBD.setText("prog");
        usuario.setText("prog");
        servidorBD.setText("localhost");
        puertoBD.setText("3306");
        tipoBD.setSelectedItem("MySQL");
        
        errorNombreBD.setVisible(false);
        errorUsuario.setVisible(false);
        errorServidor.setVisible(false);
        errorPuerto.setVisible(false);
        errorTipo.setVisible(false);
        
        contraseña.setText("prog");
        errorContraseña.setVisible(false);
        
        BotConecta.setEnabled(true);
    }//GEN-LAST:event_mysqlRadioActionPerformed

    private void OracleRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OracleRadioActionPerformed
        nombreBD.setText("datos");
        usuario.setText("datos");
        servidorBD.setText("localhost");
        puertoBD.setText("1521");
        tipoBD.setSelectedItem("Oracle");
        
        errorNombreBD.setVisible(false);
        errorUsuario.setVisible(false);
        errorServidor.setVisible(false);
        errorPuerto.setVisible(false);
        errorTipo.setVisible(false);
        
        BotConecta.setEnabled(true);
    }//GEN-LAST:event_OracleRadioActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
       int opc= JOptionPane.showConfirmDialog(this, "Cerrando la aplicación", "¿Quieres cerrar la aplicación?", JOptionPane.YES_NO_OPTION);
       if (opc==0) 
        System.exit(0);
       else{
          this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
          System.exit(0);
       }
    }//GEN-LAST:event_formWindowClosing

    private void tipoBDItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tipoBDItemStateChanged
        switch ((String) evt.getItem()) {
            case "Oracle":
                puertoBD.setText("1521");
                puertoBD.setForeground(Color.BLACK);
                errorPuerto.setVisible(false);
                errorTipo.setVisible(false);
                break;
            case "MySQL":
                puertoBD.setText("3306");
                 puertoBD.setForeground(Color.BLACK);
                errorPuerto.setVisible(false);
                errorTipo.setVisible(false);
                break;
            default:
                errorTipo.setText("[ ! ] Campo Obligatorio");
                errorTipo.setVisible(true);
                puertoBD.setText("");
                errorPuerto.setVisible(true);
                break;
        }
    }//GEN-LAST:event_tipoBDItemStateChanged

    private void puertoBDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_puertoBDKeyReleased
         compruebaCampo(evt);
    }//GEN-LAST:event_puertoBDKeyReleased

    private void usuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_usuarioKeyReleased
        compruebaCampo(evt);
    }//GEN-LAST:event_usuarioKeyReleased

    private void compruebaCampo (java.awt.event.KeyEvent evt){
        
      JTextField campo    =(JTextField)evt.getSource();  
      JLabel     etiqueta =(JLabel) campo.getClientProperty("etiqueta");
      
      if( !campo.getText().trim().isEmpty()){// comprobar formato
                  if( !campo.getText().matches((String) campo.getClientProperty("RegExp")) ){
                     etiqueta.setText("[ ! ] Formato incorrecto");
                     etiqueta.setVisible(true);
                     campo.setToolTipText((String) campo.getClientProperty("MsgRegExp"));
                  } 
                  else  etiqueta.setVisible(false);
             
                  if( !campo.getText().matches((String) campo.getClientProperty("RegExp")) ){
                     etiqueta.setText("[ ! ] Formato incorrecto");
                     etiqueta.setVisible(true);
                     campo.setToolTipText((String) campo.getClientProperty("MsgRegExp"));
                  } 
                   else {
              etiqueta.setVisible(false);
              if (!compruebaDatosValidos()) {
                  BotConecta.setEnabled(true);
              } else {
                  BotConecta.setEnabled(false);
              }
          }
        
          
      } else {
          etiqueta.setText("[ ! ] Campo Obligatorio");
          etiqueta.setVisible(true);
      }
        
        //^[A-Z][\\d\\w]{2,}  
            //Empieza may, luego 2 o mas caracteres/num
    }
    private boolean compruebaDatosValidos(){
        return     errorContraseña.isVisible() 
                || errorNombreBD.isVisible()
                || errorPuerto.isVisible()
                || errorServidor.isVisible()
                || errorTipo.isVisible()
                || errorUsuario.isVisible();
    }
    private void contraseñaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contraseñaKeyReleased
      compruebaCampo(evt);
    }//GEN-LAST:event_contraseñaKeyReleased

    private void nombreBDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreBDKeyReleased
        compruebaCampo(evt);
    }//GEN-LAST:event_nombreBDKeyReleased

    private void servidorBDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_servidorBDKeyReleased
        compruebaCampo(evt);
        
        if (servidorBD.getText().trim().equals("local"))
               servidorBD.setText("localhost");
    }//GEN-LAST:event_servidorBDKeyReleased

    private void PeliculaRadioBotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PeliculaRadioBotActionPerformed
          nombreBD.setText("instituto");
        usuario.setText("instituto");
        servidorBD.setText("localhost");
        puertoBD.setText("3306");
        tipoBD.setSelectedItem("MySQL");
        
        errorNombreBD.setVisible(false);
        errorUsuario.setVisible(false);
        errorServidor.setVisible(false);
        errorPuerto.setVisible(false);
        errorTipo.setVisible(false);
        
        contraseña.setText("instituto");
        errorContraseña.setVisible(false);
        
        BotConecta.setEnabled(true);
    }//GEN-LAST:event_PeliculaRadioBotActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotCancelar;
    private javax.swing.JButton BotConecta;
    private javax.swing.JRadioButton OracleRadio;
    private javax.swing.JRadioButton PeliculaRadioBot;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField contraseña;
    private javax.swing.JLabel errorContraseña;
    private javax.swing.JLabel errorNombreBD;
    private javax.swing.JLabel errorPuerto;
    private javax.swing.JLabel errorServidor;
    private javax.swing.JLabel errorTipo;
    private javax.swing.JLabel errorUsuario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JRadioButton mysqlRadio;
    private javax.swing.JTextField nombreBD;
    private javax.swing.JTextField puertoBD;
    private javax.swing.JTextField servidorBD;
    private javax.swing.JComboBox<String> tipoBD;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables


 public Connection conectaBD(String tipoBd,
                                       String servidorBd,
                                       String puerto,
                                       String nombreBd,
                                       String usuario,
                                       String contraseña) {
    String driver ="",url="";
    String cadenaDeConexion="";
    Connection conn =null;
        
       if(tipoBd.equalsIgnoreCase("Oracle")){
           driver="oracle.jdbc.driver.OracleDriver";
           url="jdbc:oracle:thin:";
           cadenaDeConexion=
              url+'@'+servidorBd+":"+puerto+":"+nombreBd;
       }
       else if(tipoBd.equalsIgnoreCase("mysql")){
           driver="com.mysql.jdbc.Driver";
           url="jdbc:mysql:";
           //cadenaDeConexion=url+"//"+servidorBd+":"+puerto+"/"+nombreBd;
           cadenaDeConexion=url+"//"+servidorBd+"/"+nombreBd;
            }
       else 
        {
           JOptionPane.showMessageDialog(this, "Tipo de la base de datos incorrecta", "Error", JOptionPane.ERROR_MESSAGE);
           return conn;
        }
        try {
            Class.forName(driver);
            
            conn = DriverManager.getConnection(
                    cadenaDeConexion,usuario,contraseña);
           
        } catch (SQLException x) {
            JOptionPane.showMessageDialog(this, "Error en la BD \n\n"+x.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(this, "Error con la BD \n\n"+ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
         return conn;
    }

    public Connection getConexion() {
        return conexion;
    }

    public void setConexion(Connection conexion) {
        this.conexion = conexion;
    }
 }